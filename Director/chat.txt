Type Couple : ('a, 'b)

Interface :
| write_on_wind : author:str text:str debut:int fin:int -> unit : écrit un texte sur la fenêtre, fin et début sont inclus
| cutext : text:str -> Couple int int : renvoie l'indice de début et de fin du texte à écrire sur une même ligne de la fenêtre
| get_msg : unit -> str : récupère les éventuels messages envoyés par le serveur
| sendmsg : unit -> unit : envoie le message entré au serveur, et l'affiche au niveau du client
| writemsg : msg:char array -> unit : met à jour le tableau qui correspond à la chaine de caractère qui représente le message du joueur en fonction de la touche qui a été enfoncée
| print_msg : msg:char array -> unit : met à jour l'affichage du message qu'est en train d'écrire le joueur

Fonctionnement :
Le programme se compose de 2 threads
-   Dès qu'un message est reçu, il est lu par la fonction get_msg, puis le texte est décodé par la fonction cutext, et ajouté dans une liste partagée par les deux threads.
-   Dès que la liste contenant des messages n'est pas vide, la fonction write_on_wind est appelée et affiche les nouveaux messages à l'écran.
-   La fonction writemsg permet au client courant d'écrire des messages, en mettant à jour un tableau de caractère (à taille maximale fixée)
    Cette mise à jour est indiquée au joueur par l'action de la fonction print_msg.
    Si ce dernier appuie sur la touche correspondant à l'envoi d'un message, la fonction sendmsg est appelée, qui envoie le message à tous les clients.
    Le message est alors reçu et traité par la première thread.

Améliorations possibles :
- retenir les messages reçus dans un fichier
- faire un système de page afin de pouvoir afficher tous les messages (il faudrait alors une structure de données appropriée) et un moyen de passer d'une page à l'autre